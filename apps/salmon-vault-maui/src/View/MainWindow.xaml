<ContentPage x:Class="Salmon.Vault.View.MainWindow"
        xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
        xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Salmon.Vault.View"
        xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
        xmlns:viewmodel="clr-namespace:Salmon.Vault.ViewModel"
        x:Name="this"
        Background="{StaticResource SalmonBackground}">
    <ContentPage.BindingContext>
        <viewmodel:MainViewModel/>
    </ContentPage.BindingContext>
    <ContentPage.Resources>
        <local:DoubleToStringPercentageConverter x:Key="DoubleToStringPercentageConverter"/>
        <local:BooleanToMultiSelectionConverter x:Key="BooleanToMultiSelectionConverter"/>
    </ContentPage.Resources>
    <ContentPage.MenuBarItems Background="{StaticResource SalmonBackground}">
        <!--WORKAROUND: binding context is not passed, make sure you set the content page Name to "this"
        To reroute to the view model set BindingContext="{Binding Path=BindingContext, Source={x:Reference this}}"
        see: https://github.com/dotnet/maui/issues/5382-->
        <MenuBarItem Text="File" BindingContext="{Binding Source={x:Reference this}}">
            <MenuFlyoutItem Text="Open Vault (Ctrl-O)"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.OPEN_VAULT}"/>
            <MenuFlyoutItem Text="New Vault (Ctrl-N)" 
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.CREATE_VAULT}"/>
            <MenuFlyoutItem Text="Close Vault (Ctrl-L)"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.CLOSE_VAULT}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem Text="Import Auth File"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.IMPORT_AUTH}"/>
            <MenuFlyoutItem Text="Export Auth File"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.EXPORT_AUTH}"/>
            <MenuFlyoutItem Text="Revoke Auth"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.REVOKE_AUTH}"/>
            <MenuFlyoutItem Text="Display Auth ID"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.DISPLAY_AUTH_ID}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem Text="Settings" 
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.SETTINGS}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem Text="Exit" 
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.EXIT}"/>
        </MenuBarItem>
        <MenuBarItem Text="Edit" BindingContext="{Binding Source={x:Reference this}}">
            <MenuFlyoutItem Text="New Folder" 
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.NEW_FOLDER}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem Text="Copy (Ctrl-C)"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.COPY}"/>
            <MenuFlyoutItem Text="Cut (Ctrl-X)"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.CUT}"/>
            <MenuFlyoutItem Text="Paste (Ctrl-V)"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.PASTE}"/>
            <MenuFlyoutItem Text="Delete"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.DELETE}"/>
        </MenuBarItem>
        <MenuBarItem Text="Operations" BindingContext="{Binding Source={x:Reference this}}">
            <MenuFlyoutItem Text="Import (Ctrl-I)"  
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.IMPORT}"/>
            <MenuFlyoutItem Text="Export (Ctrl-E)"  
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.EXPORT}"/>
            <MenuFlyoutItem Text="Export And Delete (Ctrl-U)"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.EXPORT_AND_DELETE}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem Text="Search (Ctrl-F)"  
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.SEARCH}"/>
            <MenuFlyoutItem Text="Refresh (Ctrl-R)" 
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.REFRESH}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem Text="Back" 
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.BACK}"/>
            <MenuFlyoutItem Text="Stop" Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.STOP}"
                              IsEnabled="{Binding StopIsVisible}"/>
        </MenuBarItem>
        <MenuBarItem Text="Help" BindingContext="{Binding Source={x:Reference this}}">
            <MenuFlyoutItem Text="About" Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.ABOUT}"/>
        </MenuBarItem>
    </ContentPage.MenuBarItems>
    <Grid Background="{StaticResource SalmonBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid HorizontalOptions="FillAndExpand" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" HorizontalOptions="Start" 
                         WidthRequest="{OnPlatform iOS=36, Android=0, Default=44}" 
                         HeightRequest="{OnPlatform iOS=36, Android=0, Default=44}"
                    Command="{Binding ClickCommand}" BindingContext="{Binding Source={x:Reference this}}"
                    CommandParameter="{x:Static viewmodel:ActionType.BACK}"
                         Background="{StaticResource SalmonBackground}"
                    Text="⮬" TextColor="White" FontSize="{OnPlatform iOS=16, Android=16, Default=22}">
            </Button>

            <Entry Grid.Column="1" HorizontalOptions="FillAndExpand" VerticalTextAlignment="Center" 
                       HeightRequest="{OnPlatform iOS=36, Android=36, Default=44}" 
                     Text="{Binding Path=Path}" IsReadOnly="True" TextColor="White"
                   Background="{StaticResource SalmonBackground}"/>

            <Button Grid.Column="2" HorizontalOptions="End" 
                         WidthRequest="{OnPlatform iOS=36, Android=0, Default=44}" 
                         HeightRequest="{OnPlatform iOS=36, Android=0, Default=44}"
                    Command="{Binding ClickCommand}" BindingContext="{Binding Source={x:Reference this}}"
                    CommandParameter="{x:Static viewmodel:ActionType.REFRESH}"
                         Background="{StaticResource SalmonBackground}"
                 Text="↺" TextColor="White" FontSize="{OnPlatform iOS=16, Android=16, Default=24}">
            </Button>
        </Grid>
        <Grid Grid.Row="1" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Background="Black"
              Padding="8,8,8,8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Headers are not showing currently -->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" WidthRequest="52" HorizontalOptions="Center" TextColor="White" Padding="10,0,0,0" />
                <Label Grid.Column="1" WidthRequest="300" Text="Name" HorizontalOptions="Start" TextColor="White" Padding="10,0,0,0" >
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Tapped="NameHeader_SingleTapped"/>
                    </Label.GestureRecognizers>
                </Label>
                <Label Grid.Column="2" WidthRequest="100" Text="Date" HorizontalOptions="Start" TextColor="White" Padding="10,0,0,0" >
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Tapped="DateHeader_SingleTapped"/>
                    </Label.GestureRecognizers>
                </Label>
                <Label Grid.Column="3" WidthRequest="100" Text="Type" HorizontalOptions="Start" TextColor="White" Padding="10,0,0,0" >
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Tapped="TypeHeader_SingleTapped"/>
                    </Label.GestureRecognizers>
                </Label>
                <Label Grid.Column="4" WidthRequest="100" Text="Size" HorizontalOptions="End" HorizontalTextAlignment="End" TextColor="White" Padding="10,0,0,0" >
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Tapped="SizeHeader_SingleTapped"/>
                    </Label.GestureRecognizers>
                </Label>
                <Label Grid.Column="5" WidthRequest="300" Text="Path" IsVisible="False" HorizontalOptions="Start" TextColor="White" Padding="10,0,0,0" />
            </Grid>
            <CollectionView Grid.Row="1" x:Name="DataGrid" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand"
                  ItemsSource="{Binding FileItemList}" Background="Black"
                            VerticalScrollBarVisibility="Always"
                      SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                            SelectedItems="{Binding SelectedItems, Mode=TwoWay}"
                            SelectionMode="{Binding IsMultiSelection, Converter={StaticResource BooleanToMultiSelectionConverter}, Mode=TwoWay}"
                            SelectionChanged="DataGrid_SelectionChanged">
                
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="viewmodel:SalmonFileViewModel">
                        <!-- Android is showing an orange background and not updating selected color -->
                        <Border HorizontalOptions="FillAndExpand" BackgroundColor="{Binding ItemBackgroundColor, Mode=OneWay}" HeightRequest="54">
                            <Grid HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" 
                                  BackgroundColor="Transparent" >
                                <FlyoutBase.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem Text="View" Clicked="MenuFlyoutItem_OnViewItem" />
                                        <MenuFlyoutItem Text="View As Text" Clicked="MenuFlyoutItem_OnViewAsTextItem" />
                                        <MenuFlyoutItem Text="Copy" Clicked="MenuFlyoutItem_OnCopyItem" />
                                        <MenuFlyoutItem Text="Cut" Clicked="MenuFlyoutItem_OnCutItem" />
                                        <MenuFlyoutItem Text="Delete" Clicked="MenuFlyoutItem_OnDeleteItem" />
                                        <MenuFlyoutItem Text="Rename" Clicked="MenuFlyoutItem_OnRenameItem" />
                                        <MenuFlyoutItem Text="Export" Clicked="MenuFlyoutItem_OnExportItem" />
                                        <MenuFlyoutItem Text="Export And Delete" Clicked="MenuFlyoutItem_OnExportAndDeleteItem" />
                                        <MenuFlyoutItem Text="Properties" Clicked="MenuFlyoutItem_OnPropertiesItem" />
                                    </MenuFlyout>
                                </FlyoutBase.ContextFlyout>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" Background="Black" Padding="0,0,8,0"
                                      MaximumHeightRequest="52" WidthRequest="52"
                                      BackgroundColor="Transparent">
                                    <Image Source="{Binding Image, Mode=OneWay}"
                                           HorizontalOptions="Center" VerticalOptions="Center"/>
                                    <!-- Android does not seem to support Opacity -->
                                    <Rectangle Opacity="0.5" Background="{Binding TintColor, Mode=OneWay}" 
                                               HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand"/>
                                    <Label Text="{Binding Ext, Mode=OneWay}" Background="Transparent"  TextColor="Black"
                                               HorizontalOptions="Center" VerticalOptions="Center" 
                                           FontSize="10"
                                           HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
                                </Grid>

                                <Label Grid.Column="1" Text="{Binding Name, Mode=OneWay}" HorizontalOptions="Start" VerticalOptions="Center"
                                       Background="Transparent" TextColor="White" Padding="10,0,0,0" WidthRequest="300"/>
                                <Label Grid.Column="2" Text="{Binding Date, Mode=OneWay}" HorizontalOptions="Start" VerticalOptions="Center"
                               Background="Transparent" TextColor="White" Padding="10,0,0,0" WidthRequest="100"/>
                                <Label Grid.Column="3" Text="{Binding Type, Mode=OneWay}" HorizontalOptions="Start" VerticalOptions="Center"
                               Background="Transparent" TextColor="White" Padding="10,0,0,0" WidthRequest="100"/>
                                <Label Grid.Column="4" Text="{Binding SizeText, Mode=OneWay}" HorizontalOptions="End" HorizontalTextAlignment="End" VerticalOptions="Center"
                               Background="Transparent" TextColor="White" Padding="10,0,0,0" WidthRequest="100"/>
                                <Label Grid.Column="5" Text="{Binding Path, Mode=OneWay}" HorizontalOptions="Start" VerticalOptions="Center"
                               Background="Transparent" TextColor="White" Padding="10,0,0,0" WidthRequest="300" IsVisible="false"/>

                                <Grid.GestureRecognizers>
                                    <TapGestureRecognizer NumberOfTapsRequired="1" Tapped="TapGestureRecognizer_SingleTapped"/>
                                    <TapGestureRecognizer NumberOfTapsRequired="2" Tapped="TapGestureRecognizer_DoubleTapped"/>
                                </Grid.GestureRecognizers>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </Grid>
        <Grid HorizontalOptions="FillAndExpand" Grid.Row="2" Background="{StaticResource SalmonBackground}"
              IsVisible="{Binding ProgressVisibility}" Padding="2,2,2,2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackLayout Grid.Column="1" Orientation="Horizontal" HorizontalOptions="End">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" HorizontalOptions="Center" VerticalOptions="Center"
				           FontSize="12" BackgroundColor="Transparent" TextColor="White"
							Text="{Binding Path=FileProgress, Converter={StaticResource DoubleToStringPercentageConverter}, Mode=OneWay}">
                    </Label>
                    <ProgressBar Grid.Row="1" Progress="{Binding FileProgress}" 
                                 WidthRequest="60"
                                 ProgressColor="DimGray"/>
                </Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" HorizontalOptions="Center" VerticalOptions="Center"
				           FontSize="12" BackgroundColor="Transparent" TextColor="White"
							Text="{Binding Path=FilesProgress, Converter={StaticResource DoubleToStringPercentageConverter}, Mode=OneWay}">
                    </Label>
                    <ProgressBar Grid.Row="1" Progress="{Binding FilesProgress}" 
                                 WidthRequest="60"
                                 ProgressColor="DimGray"/>
                </Grid>
            </StackLayout>
        </Grid>
        <StackLayout HorizontalOptions="FillAndExpand" 
                     Grid.Row="3" Background="{StaticResource SalmonBackground}"
                     Padding="2,2,2,2">
            <Label Grid.Column="0" HorizontalOptions="End" TextColor="White"
                   Text="{Binding Status}" VerticalOptions="StartAndExpand"/>
        </StackLayout>
    </Grid>
</ContentPage>
